<!doctype debiandoc system>

<book>

<titlepag>
<title>Debian Java FAQ.</title>
<author>
<name>Torsten Werner</name>
<email>twerner@debian.org</email>
</author>
<author>
<name>Niels Thykier</name>
<email>niels@thykier.net</email>
</author>
<author>
<name>Javier Fernández-Sanguino Peña</name>
<email>jfs@debian.org</email>
</author>
<version>$Revision: 7431 $, $Date: 2010-06-27 23:59:00 +0200 (Sun, 27 Jun 2010) $

<abstract>
Answers to Frequently Asked Questions on Debian and Java
(Note: some information is not up-to-date). Any changes/corrections to this
FAQ are appreciated. Please send them to the Debian Bug Tracking System as
described in <ref id="bugs">.
</abstract>

<copyright>
This document may be freely redistributed or modified in any form 
provided your changes are clearly documented.

This document may be redistributed for fee or free, and may be modified 
(including translation from one type of media or file format to another 
or from one spoken language to another) provided that all changes 
from the original are clearly marked as such.
</copyright>


</titlepag>


<toc>


<chapt>Introduction
<p>

<sect>Introduction to this FAQ

<P>This FAQ was started by Javier Fernández-Sanguino who on
February 1st, 2000 was (bold?) enough to send a message to the debian-java
mailing list with the subject "How about a Debian-Java-FAQ?". Of
course, since "every idea is a responsibility" he had to do this himself
looking through the three month-long archive of the newborn mailing list.

<p>The purpose of this FAQ is to be a place to look for all kinds of
questions a developer or user might have regarding Java as far as Debian
is concerned. It includes license issues, development packages available,
and programs related to building a Free Software Java environment.

<p>Thanks go to all the (many) contributors from the debian-java mailing list,
who have made this document possible. Without their knowledge this 
FAQ would not be at all possible since I only have a vague knowledge
of what they're talking about when I browse the list.

<p>Special thanks go to Paul Reavis, whose previous Debian-JDK
informational page I used to add more information, and who made useful
suggestions to this document. Also to Peter Moulder who revised
thoroughly the FAQ and provided many suggestions, to Juergen
Kreileder, maintainer of Blackdown's debian packages who pointed out
some mistakes, and to Egon Willighagen, who has provided quite a lot
of proper patches to update its content.

<p>This document does not address issues with other Linux
distributions, or with non-Debian-specific problems.


<sect>Location of this FAQ 

<p>This FAQ is published under the Debian Documentation Project
at <url id="http://www.debian.org/doc/manuals/debian-java-faq/">.
The <package>java-common</package> (available at
<url id="http://packages.debian.org/java-common">) provides an
HTML version for offline reading. The package version does not provide Text and
PDF versions currently (if you want them please submit a bug
'wishlist' to the package). Also, the web version might be more up-to-date
than the package's offline version.

<sect id="bugs">Sending bugs on this FAQ 

<P>Please note that this FAQ is still outdated but gets updated step by step.

<p> Please file bug reports against the java-common package if you find errors
or have suggestions on how to improve this document. However, make sure you
have read the latest online version of the english text available at <url
id="http://www.debian.org/doc/manuals/debian-java-faq/index.html"> before
filing a bug report. Translations, if available, and the offline version in
the java-common package might be out of date.

<sect>What is Java?
<p>
Java is a programming language originally developed by James Gosling at
Sun Microsystems (which is now a subsidiary of Oracle Corporation) and
released in 1995 as a core component of Sun Microsystems' Java platform.
More information can be found at <url
id="http://en.wikipedia.org/wiki/Java_%28programming_language%29"
name="Wikipedia">.

<sect>Where can I ask questions about Java on Debian?

<p>The appropriate place to ask such questions is <email>debian-java
at lists.debian.org</email>. You can subscribe at the <url
id="http://lists.debian.org/debian-java/" name="Debian Mailing Lists"> page.

<sect id="moreinfo">Complementary information 

<p>Users might want to access some online sources to complement the
information available in this FAQ which might be, sometimes, too out
of date. The main source of information is the
<url id="http://wiki.debian.org/Java" name="Java entry"> at the Debian's wiki.

<p>Since Ubuntu is based on Debian, some users might find it helpful
to check the tips on <url id="https://help.ubuntu.com/community/Java"
name="Installing Java"> on Ubuntu's wiki.

<sect id="pending">Uncovered issues

<p>This FAQ does not describe some issues due to lack of time and/or
information. If you are able to help in any of these, please, provide 
them to the documentation maintainer:

<list>

<item>Information on how to use <prgn>update-alternatives</prgn> to handle
Java and how to work with <file>/etc/java</file>.

<item>Information on how to setup a fully working Servlet engine (Application
Server) using Apache and Tomcat or information on how to setup non-free
application servers (such as WebSphere) in Debian.

<item>Specific information targeted for non-i386 users (PowerPC users and AMD64 users), some can be found in Ubuntu's wiki.

</list>


<chapt id="debian-java-lenny">Status of Java in Debian GNU/Linux 5.0 (Lenny)

<sect>What is new in Lenny?

<p>The <em>Lenny</em> release was the first one to provide Sun's OpenJDK
environment (see <ref id="openjdk">). Lenny ships OpenJDK 6 with the IcedTea
patches in version 1.1. Lenny updated GCJ to the new major version 4.3 and Ant
to version 1.7. It provides Maven 2.0 but Maven cannot yet be used to build
official Debian packages because it downloads random binaries from its central
repository during build time. The java-common package provides new meta
packages default-jdk and default-jre which declare dependencies to the
appropriate gcj and gij packages. The new source package javatools contains
useful helper tools for packaging Java software for Debian.

<p>Thanks to the development that happened in gcj and classpath and thanks to
the availability of openjdk many Java packages could be moved from contrib to
main.

<p>There are two new source packages glassfish and jbossas4 but they build only
some core libraries and do not work as full JEE application servers yet. The
main reason is that many free Java libraries are not yet packaged for Debian
but are needed as (build) dependencies. But at least there is Hibernate 3
available in the contrib component.

<chapt id="debian-java-squeeze">Status of Java in Debian Squeeze

<sect>What is new in Squeeze?

<p>The information in this chapter is probably out of date as Squeeze is not
yet released and changes rapidly.

<p>Squeeze ships with OpenJDK 6 and its IcedTea patches 1.8. The default ant
version is 1.8 but there is a compatibility package with version 1.7.
Java-common has switched to OpenJDK as the default-jdk on most architectures.
Squeeze has updated GCJ to version 4.4. The new Debian Orbital Alignment Team
has updated Eclipse to version 3.5.2.

<p>Squeeze ships a fully working Tomcat 6 and Jetty 6 but both Glassfish and
JBossAS 4 are still incomplete. Thanks to OpenJDK and the switch to OpenJDK as
the default JDK even more Java packages in the contrib component (e.g.
Hibernate 3) could be moved to main.


<p>Maven has been updated to version 2.2 and it is accompanied by new helper
packages: maven-repo-helper, maven-debian-helper, and several Maven plugins. It
is now possible to build Debian packages with Maven because Debian has its own
repository of POM files.


<sect>What are the most important changes in the Java policy?

<p>
The -gcj packages are now deprecated but we keep them if the are good reason.
The virtual package java-virtual-machine is gone and packages must not depend or
recommend java-virtual-machine. Please check the policy for more details.

<p>
Javadoc packages are now expected to link their javadoc against system
installed javadocs. This means that javadocs will now provide local
links instead of remote links. Javadoc packages will recommend on
other javadoc packages; this will install the dependency docs by
default, but allow users to avoid installing a lot of large javadoc
packages (e.g. by asking APT to not include recommends).
</p>

<sect>What have been removed in Squeeze?

<p>This is an incomplete list of packages removed from Squeeze:

<list>
<item><package>kaffe</package></item>
<item><package>cacao</package></item>
<item><package>jamvm</package></item>
<item><package>liblogkit-java</package> (Replaced by <package>libexcalibur-logkit-java</package>)</item>
<item><package>liblucene-java</package> (Replaced by <package>liblucene2-java</package>)</item>
<item><package>jmp</package> (Replaced by <package>tijmp</package>)</item>
<item><package>pja</package></item>
<item><package>slide-webdavclient</package></item>
<item><package>java-package</package></item>
<item><package>java-gcj-compat</package></item>
<item><package>classpath</package></item>
</list>
</p>

<chapt>Java Development
<p>
<sect>What full-fledged Java development platforms are available in Debian?

<p> If you are looking for an integrated, java virtual machine,
compiler and runtime environment Debian does provide them.  Of course
that would depend on the Debian GNU/Linux version you are using,
generally speaking they would be:

<list>
<item>The deprecated Kaffe in Debian 5.0 Lenny.

<item>The deprecated Sun Java 5 jdk, available in the Debian 5.0 <em>Lenny</em>
release in the <em>non-free</em> component.

<item>Sun's Java 6 jdk, available in Debian <em>Lenny</em> and Debian
<em>Squeeze</em>, also as packages in the <em>non-free</em> component.

<item>Sun's OpenJDK 6, available since the Debian 5.0 <em>Lenny</em>
release in the <em>main</em> section.

<item>The combination GCJ, GIJ, and Classpath in the <em>main</em> section.
</list>

<p>It is recommended to install one of the default-jdk or default-jre meta
packages which either installs OpenJDK or GCJ depending on the architecture and
Debian version.

<sect id="free">What free platforms are there and how can I contribute?
<p>
Please help one of the Free Java implementations if you want to use Java
in Debian. There are a lot of projects that you can choose from:
<list>

<item>openjdk: <url id="http://openjdk.java.net/"></item>

<item>gcj and libgcj: <url id="http://gcc.gnu.org/java/"></item>

<item>FastJar <url id="http://savannah.nongnu.org/projects/fastjar">, as a jar
tool.</item>

<item>Classpath <url id="http://www.classpath.org">. Most of the
Standard classes for Java 1.2 (except Swing and RMI) are implemented by
the ClassPath project, it tries to build an alternative to jdk's 1.2
core classes. (NB: This was removed from Squeeze)</item>

<item>Mauve <url
id="http://sources.redhat.com/mauve/"> is a free suite to test if
these tools are 'compliant'.</item>

</list>

<p>Most free Java development is grouped under the <url
id="http://www.gnu.org/software/java/" name="Free Java
Project">.

<sect id="license-concerns">Questions on platforms and license concerns

<sect1 id="java56">Java 5 and 6

<p>There are binary packages available for the Java 5 and Java 6 platforms
since the Debian 5.0 ('lenny') release.
These packages are available in the
<em>non-free</em> section, so you have to configure your apt sources appropriately. If
you have the following in your <file>/etc/apt/sources.list</file>:

<example>
deb http://ftp.debian.org/debian lenny main
</example>

you need to change it to:

<example>
deb http://ftp.debian.org/debian lenny main contrib non-free
</example>

Once this is done and you have updated your package database. You can either
install the Java development kit:

<example>
apt-get install sun-java6-jdk
</example>

or the Java runtime environment:

<example>
apt-get install sun-java6-jre 
</example>

<p>Similarly, you can install the Java 5 development kit:

<example>
apt-get install sun-java5-jdk
</example>

or the Java 5 runtime environment:

<example>
apt-get install sun-java5-jre
</example>

<p>You might want to update the alternatives system to have Sun's tools as the
default:

<example>
update-java-alternatives -s java-6-sun
</example>

Or for java 5:

<example>
update-java-alternatives -s java-1.5.0-sun 
</example>

<sect1 id="openjdk">Sun's OpenJDK

<p>Sun adopted in november 2006 the GPL license for almost all of the virtual
machine and GPL v2 + the <em>Classpath exception</em><footnote>This is similar
to GCC linking exception in that it allows non-GPL code to be linked with the
GPL code. This exception was developed by the <url
id="http://www.gnu.org/software/classpath/license.html" name="Classpath
project"></footnote>for the class libraries and those parts of the virtual
machine that expose public APIs.

<p>As a consequence, the free OpenJDK code is available in Debian since the
5.0 (lenny) release.</p>

<p>You can install the Java development kit:

<example>
apt-get install openjdk-6-jdk
</example>

or the Java runtime environment:

<example>
apt-get install openjdk-6-jre
</example>

<p>For more information see <url id="http://www.sun.com/software/opensource/java/faq.jsp" name="Free and Open Source Java">.


<sect>Making Debian packages for Java programs.

<sect1>Can the package go into main?

<p>Yes, <em>but only if</em> it can be build and run with Java programs/tools
in main, and if it has a Debian compliant open source license. 
If it needs programs from contrib or non-free, then is <em>must</em>
go into contrib or non-free, depending on the license of the program itself.

<sect1>Is there a good example Debian package?

<p>There are many Debian packages of both Java applications and libraries.
These may serve as an good starting point, as it can serve as an example
for making a new Debian package.

<p>A good start would be to check out the pkg-java project on
Alioth: <url id="http://pkg-java.alioth.debian.org/">.

<p>Note that there are many ways to make a Debian package, making use
of Ant or Makefiles does not really matter.
But, some tips for good practice are given on the pkg-java page:
<url id="http://pkg-java.alioth.debian.org/developers.html#rules"> and
<url id="http://pkg-java.alioth.debian.org/building.html">.


<sect1>What tools are available to make maintaining a Java packages easier?

<p>Both cdbs and debhelper (dh7) have support for ant scripts. There
are also a number of specialized tools or build helpers. Have a look
at <package>javahelper</package>
or <package>maven-debian-helper</package>. <package>gcj-jdk</package>
also has a dh_javadoc tool.</p>

<sect1>Linking package Javadoc to system javadoc.

<p>The java-policy mandates that documentation must be linked with
with the javadoc installed on the system. This can be done by passing
javadoc the "-link" argument or by using the &lt;link&gt; tag in ant.
An example:

<example>
# command line example of linking against system doc.
javadoc -link /usr/share/doc/default-jdk-doc/api [other arguments]

&lt;!-- Ant example of linking against system doc --&gt;
&lt;javadoc [attributes]&gt;
    &lt;link href="/usr/share/doc/default-jdk-doc/api/" /&gt;
    [other tags]
&lt;/javadoc&gt;
</example>
</p>

<p>The documentation must be installed at the time the linking is
done; so in the example cases above the package would need a
Build-Depends or a Build-Depends-Indep on
<package>default-jdk-doc</package>.
</p>

<p>
Here is a short list of packages that can be used for reference:
<list>
  <item><package>commons-jci</package></item>
  <item><package>ow-util-ant-tasks</package></item>
  <item><package>libhamcrest-java</package></item>
  <item><package>libfreemarker-java</package></item>
</list>
</p>

<chapt>Java Compilers
<p>
<sect>What Java compilers are available in Debian?
<p>
<list>

<item><package>openjdk-6-jdk</package></item>

<item><package>sun-java6-jdk</package> (non-free)</item>

<item><package>gcj</package>. Compiles Java source to native code,
also source to bytecode, or bytecode to native code.

<item>The deprecated <package>jikes</package> in <em>Lenny</em>.

</list>

<chapt>Java Virtual Machines (JVM)
<p>
<sect>What JVMs are available in Debian?

<p>The following JVMs are currently available in Debian Squeeze:

<list>
<item><package>openjdk-6-jre</package></item>
<item><package>sun-java6-jre</package> (non-free)</item>
<item><package>gcj-4.4-jre</package></item>
</list>

</p>

<p>The following lists JVMs available in Debian 5.0 release ('Lenny'):

<list>
<item><package>openjdk-6-jre</package></item>
<item><package>kaffe</package></item>
<item><package>gij-4.3</package></item>
</list>


<sect>What API do these JVMs provide?

<p>Note that providing an API does not mean that everything is
implemented, and certainly not implemented correctly. But even Sun's
SDK, each out of four confirmed bugs don't get fixed, so don't
disregard free implementation on buggyness or limited implementation
alone.

<sect>Are there known problems?

<p>Yes, there are. Some of these are reported as Debian bugs. You can
look up the bugs for a specific Debian package at the <url
id="http://www.debian.org/Bugs/" name="Debian Bug Tracking System">.  As
a quick link, here are some packages:

<list>
<item><url id="http://bugs.debian.org/java-common" name="java-common"></item>
<item><url id="http://bugs.debian.org/src:openjdk-6" name="openjdk-6"></item>
<item><url id="http://bugs.debian.org/src:gcj-4.4" name="gcj-4.4"></item>
</list>

<p>As common within the Debian project, the developers would
appreciate good bug reports on found problems. These include the good
description of the problem, the command that gives the problem, the
errors given when running the command, and any other information that
might be relevant. A good tool to report bugs is
<package>reportbug</package>.

<sect>Do I need a JVM to run a Java program in Debian?
<p>
No, you can try to run the applications without a jvm by compiling 
the source code to native code is.

<sect1>How do I compile to native code?

<p>You might be able to use <prgn>gcj</prgn> to compile the program.
And use <prgn>gcj</prgn> to convert bytecode to native code. The entire
software chain is free.


<chapt id="browser-java">Java Plugins for Browsers

<p>
<list>

<item>You can install the package icedtea-gcjwebplugin or the non-free
packages sun-java5-plugin or sun-java6-plugin in <em>Lenny</em>.</item>

<item>You can install the package icedtea6-plugin or the non-free
package sun-java6-plugin in <em>Squeeze</em>.</item>

</list>


<chapt>Java Servlets
<p>
<sect>How can I make Java servlets work?
<p>You can use:
<list>
  <item>Apache <package>tomcat6</package> from <url id="http://tomcat.apache.org">.
  <item>Eclipse <package>jetty</package> from <url id="http://www.eclipse.org/jetty/">.
</list>


<chapt>Java Policy
<p>
<sect>Is there a Java policy for Debian?
<p>
It is still in the works. The current policy addresses <em>some</em>
of the problems. It has not been officially released. You can find
it at <url id="http://www.debian.org/doc/packaging-manuals/java-policy/">.
The Java Policy can also be found in the <package>java-common</package>
package. You might want to also take a look at the 
<url id="http://wiki.debian.org/DebianJavaPackaging"
name="Common Java Packaging"> entry in the Debian wiki.

<sect>Are there holes in the Java Policy?
<p>Yes, some until under discussion. Please check out the 
<url id="http://bugs.debian.org/java-common" name="bugs against
the java-common package">. Thus it is <em>very</em> inconvenient to
use several compilers of virtual machines since there is not one
CLASSPATH setting for all of them.

<chapt>Other Java alternatives for Debian
<p>If the Java packages provided in Debian are not sufficient for your
needs you might need to take a look at other alternatives. Please understand
that these alternatives are not supported by the Debian project directly,
you might get help, however, from the debian-java mailing list if you 
encounter issues with them.

<P>Some of the alternatives presented use Debian packages which is
convenient, since the user/administrator does not need to care on installation
issues. However, mixing packages that come from a source which is not
the Debian project might cause conflicts with your installation some times.
Of course, Debian tries to integrate as many free software efforts as 
possible, so some of the alternatives described below might (if license
permits) be included in Debian in the near future.

<sect>Java programs not yet available on Debian
<p>
The following are programs that have not yet been packaged for Debian
nor is there an installer. There are quite a lot Java programs out
there and this list is not an exhaustive list, it only includes
programs that <em>might</em> be packaged for Debian or those that
someone is working on an installer for:
<list>
<item>BlueJ. A development environment for Java with editor, compiler,
virtual machine and debugger. See <url
id="http://bluej.monash.edu.au/">
<item>Jacob (Java Commando Base): project maintainer and visualiser
for Java in Emacs. See <url
id="http://home.pages.de/~kclee/clemens/jacob">.

<item>Emacs in Java. See <url id="http://jemacs.sourceforge.net/">.

<item>Netbeans developer, now called <em>Forte</em>. Based on the
Javabeans architecture. See <url id="http://www.netbeans.com">.Sun
recently announced they would open-source it.  See <url
id="http://www.sun.com/forte/tools4dotcom/opensource.html">.

<item>AnyJ. Graphic environment to develop applications, applets and
servlets. More info in <url id="http://www.netcomputing.de">.

<item>Free Builder. A Java IDE written in Java and distributed under
the GPL <url id="http://www.freebuilder.org">.

</list>

</book>
